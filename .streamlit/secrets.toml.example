# Streamlit Native Authentication Configuration
# Copy this file to .streamlit/secrets.toml and fill in your actual credentials

[auth]
# Redirect URI for Streamlit login - should match what's configured in Google Cloud Console
# For local development:
redirect_uri = "http://localhost:8501/oauth2callback"
# For production (Streamlit Cloud):
# redirect_uri = "https://chefsassistant.streamlit.app/oauth2callback"

# Cookie secret - should be a strong, randomly generated string (at least 32 characters)
# Generate one with: python -c "import secrets; print(secrets.token_urlsafe(32))"
cookie_secret = "your-strong-random-cookie-secret-here"

# Google OAuth Credentials - Get these from Google Cloud Console
client_id = "your-client-id.apps.googleusercontent.com"
client_secret = "your-client-secret"

# Google's OIDC server metadata URL (this is standard for all Google OIDC clients)
server_metadata_url = "https://accounts.google.com/.well-known/openid-configuration"

# OAuth scopes for login only (no Drive access needed for basic auth)
client_kwargs = { scope = "openid email profile" }

# Optional: Google Drive Storage Configuration
# If you want to enable Google Drive storage, uncomment and configure this section
# You can use the same client_id/secret as above, or create a separate OAuth client
# IMPORTANT: Add this redirect URI to your Google Cloud Console OAuth client:
#            Local: http://localhost:8501/drive_oauth2callback
#            Production: https://chefsassistant.streamlit.app/drive_oauth2callback

# [google_drive]
# For local development:
# redirect_uri = "http://localhost:8501/drive_oauth2callback"
# For production:
# redirect_uri = "https://chefsassistant.streamlit.app/drive_oauth2callback"
# client_id = "your-client-id.apps.googleusercontent.com"  # Can be same as auth.client_id
# client_secret = "your-client-secret"  # Can be same as auth.client_secret